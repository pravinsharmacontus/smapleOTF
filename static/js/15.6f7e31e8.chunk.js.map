{"version":3,"file":"static/js/15.6f7e31e8.chunk.js","mappings":"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","sources":["components/SideMenu/MenuListComponent.jsx","components/SideMenu/NavBar.jsx","components/SideMenu/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Ripples from 'react-ripples';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport AddCohostPopup from '../MainContent/Broadcast/AddCohostPopup';\n\nfunction MenuListComponent(_props = {}) {\n    const { _location = \"\", _handlePaneltoggle = () => { }, _pathName = '/', _MenuName = '', _icon = '' } = _props;\n    const history = useHistory();\n    const [getPopupState, setPopupState] = useState(false);\n    const awsStageReducer = useSelector((state) => state?.awsStageReducer); //store\n    const { sessionName = \"\" } = awsStageReducer;\n    const appStatus = useSelector((state) => state?.appStatus); //store\n    const location = useLocation() || {}; //get user path\n    const { pathname = \"\" } = location;\n\n    const hideSwitch = () => {\n        if (appStatus !== \"\") {\n            return true;\n        }\n    };\n\n    const handlePopup = (state = false) => {\n        setPopupState(state);\n    };\n\n    const handleLeavePage = () => {\n        setPopupState(false);\n        setTimeout(() => {\n            history.push(_pathName);\n        }, 2000);\n    };\n\n    return (\n        <>\n            <li tabIndex={1} className={_location === _pathName ? \"active\" : \"\"}>\n                <Ripples color={'#ffffff20'} className=\"li\">\n                    {hideSwitch() && sessionName && pathname === \"/broadcast\" ? <button onClick={() => handlePopup(true)} className='a' type='button'>\n                        <i className=\"icon\">\n                            {_icon}\n                        </i>\n                        <span className=\"nav-text\">{_MenuName}</span>\n                    </button>\n                        :\n                        <Link onClick={_handlePaneltoggle} to={_pathName}>\n                            <i className=\"icon\">\n                                {_icon}\n                            </i>\n                            <span className=\"nav-text\">{_MenuName}</span>\n                        </Link>\n                    }\n                </Ripples>\n            </li>\n            {getPopupState ? (\n                <AddCohostPopup\n                    _handleOnOutsideClick={() => handlePopup(false)}\n                    type=\"callExit\"\n                    handleExit={handleLeavePage}\n                />\n            ) : null}\n        </>\n    );\n}\n\nexport default React.memo(MenuListComponent);\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  IconBroadcasts,\n  IconTeams,\n  IconVideos,\n  IconIntegration,\n  IconCustomers,\n} from \"./../../assets/img\";\nimport MenuListComponent from \"./MenuListComponent\";\n\nconst NavBar = (props = {}) => {\n  const { location = \"\", _handlePaneltoggle = () => { } } = props || {};\n  const loginDetail = window.localStorage.getItem(\"userDetails\")\n    ? JSON.parse(window.localStorage.getItem(\"userDetails\"))\n    : {};\n  const { data: { userRoleId = \"\" } = {} } = loginDetail;\n\n  const { t } = useTranslation();\n  console.log(\"loginDetail\", userRoleId, loginDetail);\n\n  /**\n   * userDetails is when user is logged || null\n   * condition Based NavBar Show and Hide\n   */\n\n  return (\n    <React.Fragment>\n      <nav className=\"slidingNov\">\n        <ul className=\"nav-internal\">\n          {(userRoleId !== 4 && userRoleId !== 5) ? (\n            <>\n              <MenuListComponent\n                _location={location}\n                _handlePaneltoggle={_handlePaneltoggle}\n                _pathName={\"/broadcast\"}\n                _MenuName={t(\"NAVBAR.BROADCAST\")}\n                _icon={<IconBroadcasts />}\n              />\n              <MenuListComponent\n                _location={location}\n                _handlePaneltoggle={_handlePaneltoggle}\n                _pathName={\"/teams\"}\n                _MenuName={t(\"NAVBAR.TEAMS\")}\n                _icon={<IconTeams />}\n              />\n\n              <MenuListComponent\n                _location={location}\n                _handlePaneltoggle={_handlePaneltoggle}\n                _pathName={\"/videos\"}\n                _MenuName={t(\"Videos\")}\n                _icon={<IconVideos />}\n              />\n              {(\n                <>\n                <MenuListComponent\n                _location={location}\n                _handlePaneltoggle={_handlePaneltoggle}\n                _pathName={\"/integration\"}\n                _MenuName={t(\"Integration\")}\n                _icon={<IconIntegration />}\n              />\n                </>\n              )}\n            </>\n          ) : (\n            <div>\n              <MenuListComponent\n                _location={location}\n                _handlePaneltoggle={_handlePaneltoggle}\n                _pathName={\"/customers\"}\n                _MenuName={t(\"NAVBAR.CUSTOMERS\")}\n                _icon={<IconCustomers />}\n              />\n              <MenuListComponent\n                _location={location}\n                _handlePaneltoggle={_handlePaneltoggle}\n                _pathName={\"/teams\"}\n                _MenuName={t(\"NAVBAR.TEAMS\")}\n                _icon={<IconTeams />}\n              />\n            </div>\n          )}\n        </ul>\n      </nav>\n    </React.Fragment>\n  );\n};\nexport default React.memo(NavBar);\n","import NavBar from \"./NavBar\";\nimport React, { useState } from \"react\";\nimport { ImgLogoHeader } from \"../../assets/images\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nconst SideMenu = () => {\n  const location = useLocation() || {};\n  const [stateManage, setStateManage] = useState({\n    openPanel: false,\n    popupAnimate: false,\n    ProfileOption: false,\n    ProfileWidget: false,\n  });\n  const loginDetail = window.localStorage.getItem(\"userDetails\")\n    ? JSON.parse(window.localStorage.getItem(\"userDetails\"))\n    : {};\n  const { data: { userRoleId = \"\" } = {} } = loginDetail;\n  const handleHamburgerMenuClose = () => {\n    document &&\n      document.getElementById(\"SideMenuWrapper\") &&\n      document.getElementById(\"SideMenuWrapper\").classList.remove(\"show\");\n    document &&\n      document.getElementById(\"menuButton\") &&\n      document.getElementById(\"menuButton\").classList.remove(\"active\");\n  };\n\n  const _handlePaneltoggle = () => {\n    setStateManage({\n      ...stateManage,\n      openPanel: !stateManage.openPanel,\n    });\n    handleHamburgerMenuClose();\n  };\n\n  // Navigation Bar Open notification open close\n  // const _handleNotification = () => {\n  //    setopenNotification(!openNotification);\n  // };\n\n  return (\n    <React.Fragment>\n      <div id=\"SideMenuWrapper\" className=\"SideMenuWrapper\">\n        <nav className=\"main-menu\">\n          {(userRoleId !== 4 && userRoleId !== 5) ? (\n            <div>\n              <Link className=\"logo_link\" to={\"/broadcast\"}>\n                <img\n                  alt=\"MirrorFly\"\n                  className=\"logo white\"\n                  src={ImgLogoHeader}\n                />\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <Link className=\"logo_link\" to={\"/customers\"}>\n                <img\n                  alt=\"MirrorFly\"\n                  className=\"logo white\"\n                  src={ImgLogoHeader}\n                />\n              </Link>\n            </div>\n          )}\n          <div className=\"nav_menu_link scrollbar\" id=\"style-1\">\n            <NavBar\n              location={location.pathname}\n              _handlePaneltoggle={_handlePaneltoggle}\n            />\n          </div>\n        </nav>\n        <div\n          className=\"outsideClick\"\n          id=\"outsideClick\"\n          onClick={handleHamburgerMenuClose}\n          data-jest-id={\"jestHandleHamburgerMenuClose\"}\n        ></div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default React.memo(SideMenu);\n"],"names":["MenuListComponent","_props","arguments","length","undefined","_location","_handlePaneltoggle","_pathName","_MenuName","_icon","history","useHistory","getPopupState","setPopupState","useState","awsStageReducer","useSelector","state","sessionName","appStatus","location","useLocation","pathname","handlePopup","_jsxs","_Fragment","children","_jsx","tabIndex","className","Ripples","color","hideSwitch","onClick","type","Link","to","AddCohostPopup","_handleOnOutsideClick","handleExit","handleLeavePage","setTimeout","push","React","NavBar","props","loginDetail","window","localStorage","getItem","JSON","parse","data","userRoleId","t","useTranslation","console","log","IconBroadcasts","IconTeams","IconVideos","IconIntegration","IconCustomers","SideMenu","stateManage","setStateManage","openPanel","popupAnimate","ProfileOption","ProfileWidget","handleHamburgerMenuClose","document","getElementById","classList","remove","id","alt","src","ImgLogoHeader"],"sourceRoot":""}