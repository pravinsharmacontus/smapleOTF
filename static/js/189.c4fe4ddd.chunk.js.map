{"version":3,"file":"static/js/189.c4fe4ddd.chunk.js","mappings":"4LAyEA,QApEA,WACI,MAAOA,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IACrCC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,iBACjDC,EAAYJ,KAAKC,MAAMC,aAAaC,QAAQ,gBAChDH,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GAC9CE,EAAYL,KAAKC,MAAMC,aAAaC,QAAQ,sBAChDH,KAAKC,MAAMC,aAAaC,QAAQ,sBAAwB,GAU1D,OARAG,EAAAA,EAAAA,YAAU,KAEFT,EADkB,OAAnBE,GAA2BK,EACb,UAEA,WACjB,KAIAG,EAAAA,EAAAA,KAAEC,EAAAA,SAAc,CAAAC,UACZC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBF,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,wBAAuBF,UAClCF,EAAAA,EAAAA,KAAA,KACIK,KAAK,IACLC,IAAI,sBACJF,UAAU,OAAMF,UAEhBF,EAAAA,EAAAA,KAACO,EAAAA,IAAQ,SAGjBP,EAAAA,EAAAA,KAAA,OAAKI,UAAU,sBAAqBF,UAChCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BF,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,SACJ,OAAnBV,GAA2BK,GAAYG,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,KAAMR,EAAAA,EAAAA,KAACS,EAAAA,GAAU,OAEzEN,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,2BAAyBb,EAAU,kBACvCc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UAACF,EAAAA,EAAAA,KAACU,EAAAA,GAAY,OACnCP,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,wBAAoBF,EAAAA,EAAAA,KAAA,UAAAE,SAASb,IAAoB,8FAExDc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UAACF,EAAAA,EAAAA,KAACW,EAAAA,GAAQ,OAC/BR,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,oBAAkBb,EAAU,WAAOW,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,YAAgB,qCAElEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMF,UAACF,EAAAA,EAAAA,KAACY,EAAAA,GAAQ,OAC/BT,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,kBAAgBb,EAAU,KAACW,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,+CAG1B,OAAnBV,GAA2BK,IACxBM,EAAAA,EAAAA,MAAA,KAAGU,OAAO,QAAQP,IAAI,aAClBD,KAAI,4BAAAS,OAA8BjB,GAClCO,UAAU,qBAAoBF,SAAA,CAAC,eAAab,KAGhC,OAAnBG,GAA2BM,IACxBK,EAAAA,EAAAA,MAAA,KAAGU,OAAO,QAAQP,IAAI,aAClBD,KAAMP,EACNM,UAAU,qBAAoBF,SAAA,CAAC,eAAab,cAS5E,C","sources":["components/MainContent/BroadcastedVideos/BroadcastedVideosTable/YouTubebroadcast.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './EnableYoutube.scss';\nimport { IconLogo } from \"../../../../assets/images\";\nimport { IconFbDark, IconInternet, IconMute, IconTime, IconYoutube } from \"../../../../assets/img\";\n\nfunction YouTubebroadcast(_props = {}) {\n    const [mediaType, setMediaType] = useState(\"\");\n    const mediaSelection = JSON.parse(localStorage.getItem('Select_Media'));\n    const youtubeId = JSON.parse(localStorage.getItem('broadcastId'))\n    ? JSON.parse(localStorage.getItem('broadcastId')) : \"\";\n    const faceookId = JSON.parse(localStorage.getItem('Facebook_Live_Url'))\n    ? JSON.parse(localStorage.getItem('Facebook_Live_Url')) : \"\";\n\n    useEffect(() => {\n        if(mediaSelection === \"YT\" && youtubeId ){\n            setMediaType(\"Youtube\");\n        }else {\n            setMediaType(\"Facebook\");\n        }\n    })\n\n    return (\n        < React.Fragment >\n            <div className=\"enable_youtube_wraper\">\n                <div className=\"enable_youtube_header\">\n                    <a\n                        href=\"/\"\n                        rel=\"noopener noreferrer\"\n                        className=\"logo\"\n                    >\n                        <IconLogo />\n                    </a>\n                </div>\n                <div className=\"active_youtube_body\">\n                    <div className=\"active_youtube_body_inner\">\n                        <div className=\"icon_center\">\n                            {mediaSelection === \"YT\" && youtubeId ? <IconYoutube /> : <IconFbDark /> }\n                        </div>\n                        <h2>You're about to watch a {mediaType} broadcast.</h2>\n                        <div className=\"list_view_wraper\">\n                            <div className=\"list_view\">\n                                <div className=\"icon\"><IconInternet /></div>\n                                <p>When you're live on <strong>{mediaType}</strong>, we advise closing it. This will conserve bandwidth and be easier on your computer.</p>\n                            </div>\n                            <div className=\"list_view\">\n                                <div className=\"icon\"><IconMute /></div>\n                                <p>If you must have {mediaType} open, <strong>Mute it</strong> so you can't hear yourself</p>\n                            </div>\n                            <div className=\"list_view\">\n                                <div className=\"icon\"><IconTime /></div>\n                                <p>Take note that {mediaType} <strong> delays broadcasts by 10 seconds.</strong></p>\n                            </div>\n                        </div>\n                        {mediaSelection === \"YT\" && youtubeId &&\n                            <a target=\"_self\" rel=\"noreferrer\"\n                                href={`https://youtube.com/live/${youtubeId}`}\n                                className=\"active_youtube_btn\">Continue to {mediaType}\n                            </a>\n                        }\n                        {mediaSelection === \"FB\" && faceookId &&\n                            <a target=\"_self\" rel=\"noreferrer\"\n                                href={faceookId}\n                                className=\"active_youtube_btn\">Continue to {mediaType}\n                            </a>\n                        }\n                    </div>\n                </div>\n            </div>\n        </React.Fragment >\n\n    );\n}\n\nexport default YouTubebroadcast;\n"],"names":["mediaType","setMediaType","useState","mediaSelection","JSON","parse","localStorage","getItem","youtubeId","faceookId","useEffect","_jsx","React","children","_jsxs","className","href","rel","IconLogo","IconYoutube","IconFbDark","IconInternet","IconMute","IconTime","target","concat"],"sourceRoot":""}